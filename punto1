.data
array: .word 1, 7, 2, 3, 4, 5, 9, 8, 16, -50
length: .word 10
mayor: .word 0
space: .asciiz ", "
multiplosCuatro: .word 0


.text

main:
    # Cargo array
    la $s1, array
    # Cargo length
    lw $s2, length
    # Cargo mayor
    lw $t0, mayor
    # Contador de posiciones
    li $s0, 0

#whileMayor:
#    bge $s0, $s2, exit     # Si s0 >= s2, termina el bucle
#    # Calcular la direcci�n del elemento en el array
#    mul $t1, $s0, 4        # Multiplicar el �ndice por 4 (tama�o de palabra)
#    add $t1, $t1, $s1      # Sumar la direcci�n base del array
#    lw $t3, 0($t1)         # Cargar el valor del elemento en $t3
#    jal printNumber

#    bgt $t3, $t0, mayorQue    # Si t3 > t0, ir a mayorQue
#    addi $s0, $s0, 1          # Incrementar el contador de posici�n
#    j whileMayor              # Volver al inicio del bucle

#whileMultiploCuatro:
#    bge $s0, $s2, exit     # Si s0 >= s2, termina el bucle
#    # Calcular la direcci�n del elemento en el array
#    mul $t1, $s0, 4        # Multiplicar el �ndice por 4 (tama�o de palabra)
#    add $t1, $t1, $s1      # Sumar la direcci�n base del array
#    lw $t3, 0($t1)         # Cargar el valor del elemento en $t3
#    jal printNumber
#   
#    li $t4,4
#    div $t3,$t4
#    mfhi $t5
#    
#    
#    beqz $t5, aumentarContadorMultiplo    # Si el residuo t5 es cero
#    addi $s0, $s0, 1          		# Incrementar el contador de posici�n
#    j whileMultiploCuatro 


whileAbsoluto:
    bge $s0, $s2, exit     # Si s0 >= s2, termina el bucle
    # Calcular la direcci�n del elemento en el array
    mul $t1, $s0, 4        # Multiplicar el �ndice por 4 (tama�o de palabra)
    add $t1, $t1, $s1      # Sumar la direcci�n base del array
    lw $t3, 0($t1)         # Cargar el valor del elemento en $t3
    jal printNumber
    abs $t3,$t3

    bgt $t3, $t0, mayorQue    # Si t3 > t0, ir a mayorQue
    addi $s0, $s0, 1          # Incrementar el contador de posici�n
    j whileAbsoluto              # Volver al inicio del bucle

exit:
   

    li $v0, 10             # Finalizar el programa
    syscall

mayorQue:
    move $t0, $t3          # Almacenar el elemento actual como el nuevo mayor
    addi $s0, $s0, 1       # Incrementar el contador de posici�n
    j whileAbsoluto           # Volver al inicio del bucle

printNumber:
    li $v0, 1              # Imprimir un entero
    move $a0, $t3          # Cargar el n�mero a imprimir en $a0
    syscall

    li $v0, 4              # Imprimir una cadena
    la $a0, space          # Cargar la cadena a imprimir en $a0
    syscall

    jr $ra                 # Volver a la llamada

#aumentarContadorMultiplo:
#	la $t3, multiplosCuatro
#	lw $t4, 0($t3)
#	addi $t4,$t4,1
#	sw $t4,0($t3)
#	move $t1,$t4
#	j whileMultiploCuatro 
#	

	